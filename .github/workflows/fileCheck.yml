name: File Check

on:
  pull_request:
    branches:
      - master
    types: [opened, synchronize]

permissions:
  pull-requests: write

jobs:
  job1:
    if: ${{ github.event.pull_request.user.login != 'renovate[bot]'}}
    name: Check Not Allowed File Changes
    runs-on: ubuntu-latest
    steps:

      - name: Check Not Allowed File Changes
        uses: dorny/paths-filter@v2
        id: filter_not_allowed
        with:
          list-files: json
          filters: |
            change:
            - 'package-lock.json'
            - 'yarn.lock'
            - 'pnpm-lock.yaml'

      # ref: https://github.com/github/docs/blob/main/.github/workflows/triage-unallowed-contributions.yml
      - name: Comment About Changes We Can't Accept
        if: ${{ steps.filter_not_allowed.outputs.change == 'true' }}
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6
        with:
          script: |
            let workflowFailMessage = "It looks like you've modified some files that we can't accept as contributions."
            try {
            const badFilesArr = [
              'package-lock.json',
              'yarn.lock',
              'pnpm-lock.yaml',
            ]
            const badFiles = badFilesArr.join('\n- ')
            const reviewMessage = `ðŸ‘‹ Hey there spelunker. It looks like you've modified some files that we can't accept as contributions. The complete list of files we can't accept are:\n- ${badFiles}\n\nYou'll need to revert all of the files you changed in that list using [GitHub Desktop](https://docs.github.com/en/free-pro-team@latest/desktop/contributing-and-collaborating-using-github-desktop/managing-commits/reverting-a-commit) or \`git checkout origin/main <file name>\`. Once you get those files reverted, we can continue with the review process. :octocat:\n\nMore discussion:\n- https://github.com/electron-vite/electron-vite-vue/issues/192`
            createdComment = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
              body: reviewMessage,
            })
            workflowFailMessage = `${workflowFailMessage} Please see ${createdComment.data.html_url} for details.`
            } catch(err) {
            console.log("Error creating comment.", err)
            }
            core.setFailed(workflowFailMessage)